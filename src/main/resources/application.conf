akka {
  actor {
    provider = akka.cluster.ClusterActorRefProvider
  }
  remote {
    log-remote-lifecycle-events = off
  }
  cluster {
    sharding {
      role = "member"
    }
    allow-weakly-up-members = on
    metrics.enabled = off
    sharding {
      state-store-mode = ddata
    }
    seed-nodes = [
      "akka.tcp://registerd@registerd-seed0.onplatforms.net:2550",
      "akka.tcp://registerd@registerd-seed1.onplatforms.net:2551",
      "akka.tcp://registerd@registerd-seed2.onplatforms.net:2552",
      "akka.tcp://registerd@registerd-seed3.onplatforms.net:2553",
      "akka.tcp://registerd@registerd-seed4.onplatforms.net:2554",
      "akka.tcp://registerd@registerd-seed5.onplatforms.net:2555",
    ]
    http.management.hostname = "127.0.0.1"
    http.management.port = 19999
  }
  remote {
    enabled-transports = ["akka.remote.netty.tcp"]
    netty.tcp {
      hostname = "127.0.0.1"
      hostname = ${?AKKA_HOSTNAME}
      port = 0
      port = ${?AKKA_PORT}
      bindhostname = "127.0.0.1"
      maximum-frame-size = 12800000
    }
  }
  extensions = [
    "akka.cluster.ddata.DistributedData",
  ]
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "INFO"
  loggers-dispatcher = "registerd.loggers-dispatcher"
}

registerd {
  loggers-dispatcher {
    type = Dispatcher
    executor = "thread-pool-executor"
    thread-pool-executor {
      fixed-pool-size = 2
    }
    throughput = 100
  }
  endpoint {
    hostname: "localhost"
    hostname: ${?REGISTERD_ENDPOINT_HOSTNAME}
    port: 9000
    port: ${?REGISTERD_ENDPOINT_PORT}
  }
}